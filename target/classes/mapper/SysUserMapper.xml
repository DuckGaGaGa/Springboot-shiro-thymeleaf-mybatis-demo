<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duckgagaga.shirodemo.myshirodemo.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.duckgagaga.shirodemo.myshirodemo.entity.SysUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="userName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="passWord" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="realName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="registerTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updateDataTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="creatorId" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deleted" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="code" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userName, passWord, phone, realName, sex, age, registerTime, updateDataTime, 
    creatorId, email, deleted, code
  </sql>
  <select id="selectByExample" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUser">
    insert into sys_user (id, userName, passWord, 
      phone, realName, sex, 
      age, registerTime, updateDataTime, 
      creatorId, email, deleted, 
      code)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{age,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, #{updateDataTime,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}, 
      #{code,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="passWord != null">
        passWord,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="registerTime != null">
        registerTime,
      </if>
      <if test="updateDataTime != null">
        updateDataTime,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="code != null">
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDataTime != null">
        #{updateDataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.passWord != null">
        passWord = #{record.passWord,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.registerTime != null">
        registerTime = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDataTime != null">
        updateDataTime = #{record.updateDataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        creatorId = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      userName = #{record.userName,jdbcType=VARCHAR},
      passWord = #{record.passWord,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      registerTime = #{record.registerTime,jdbcType=TIMESTAMP},
      updateDataTime = #{record.updateDataTime,jdbcType=TIMESTAMP},
      creatorId = #{record.creatorId,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER},
      code = #{record.code,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUser">
    update sys_user
    <set>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        passWord = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        registerTime = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDataTime != null">
        updateDataTime = #{updateDataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duckgagaga.shirodemo.myshirodemo.entity.SysUser">
    update sys_user
    set userName = #{userName,jdbcType=VARCHAR},
      passWord = #{passWord,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      registerTime = #{registerTime,jdbcType=TIMESTAMP},
      updateDataTime = #{updateDataTime,jdbcType=TIMESTAMP},
      creatorId = #{creatorId,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER},
      code = #{code,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>